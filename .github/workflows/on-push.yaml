name: Changesets
on:
  push:
    branches:
      - "main"
  pull_request:
    types: [labeled, synchronize]

env:
  CI: true
jobs:
  version:
    name: "Changesets Publish"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-modules-cache-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Authenticate NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Install Dependencies
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: pnpm install --frozen-lockfile
      - name: Post Install Clean Up
        run: rm -rf ~/.npmrc
      - name: Setup safe git directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Create pre.json if it doesn't exist
        if: github.event_name == 'pull_request'
        run: |
          if [[ ! -f ".changeset/pre.json" ]]; then
            pnpm changeset pre ${{ github.event.pull_request.head.ref }}
          fi
      - name: Check for changeset file and run version
        if: github.event_name == 'pull_request'
        run: |
          if compgen -G ".changeset/*-*-*.md" > /dev/null; then
            pnpm changeset version
          fi
      - name: Create and publish versions
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          commit: "chore: Update versions"
          title: "chore: Update versions"
          publish: pnpm ci:publish 1
          createGithubReleases: true
          branch: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
